{"version":3,"sources":["recoil-state/MenuState.js","menu/Menu.jsx","content/AboutMe.jsx","content/Projects.jsx","data/FutureData.js","data/ProjectData.js","content/Content.jsx","App.js","reportWebVitals.js","index.js"],"names":["menuState","atom","key","default","Menu","props","className","useRecoilState","selectedState","setSelectedState","Drawer","variant","anchor","List","ListItem","ListItemText","primary","map","text","index","button","selected","onClick","_event","handleListItemClick","AboutMe","id","Typography","paragraph","src","alt","Project","name","repository","site","description","useState","expanded","setExpanded","toggleExpanded","Card","CardContent","CardActions","Link","href","Button","size","Projects","projects","project","future","_id","$oid","Content","contentState","useRecoilValue","component","useStyles","makeStyles","drawer","width","content","marginTop","marginLeft","App","classes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b5c8bc9.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\n\r\nconst menuState = atom({\r\n   key: \"menuState\",\r\n   default: 0,\r\n});\r\n\r\nexport default menuState;\r\n","import {\r\n   ListItem,\r\n   ListItemText,\r\n   makeStyles,\r\n   Drawer,\r\n   List,\r\n} from \"@material-ui/core\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport menuState from \"../recoil-state/MenuState\";\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nconst drawerWidth = 100;\r\n\r\nconst Menu = (props) => {\r\n   const { className } = props;\r\n   const [selectedState, setSelectedState] = useRecoilState(menuState);\r\n\r\n   const handleListItemClick = (index, text) => {\r\n      setSelectedState(index);\r\n   };\r\n\r\n   return (\r\n      <Drawer variant=\"permanent\" anchor=\"left\" className={className}>\r\n         <List className={className}>\r\n            <ListItem>\r\n               <ListItemText primary=\"Andrew Jarvis\" />\r\n            </ListItem>\r\n            {[\"About Me\", \"Projects\", \"Future Projects\"].map((text, index) => {\r\n               return (\r\n                  <ListItem\r\n                     button\r\n                     key={text}\r\n                     selected={selectedState === index}\r\n                     onClick={(_event) => handleListItemClick(index, text)}\r\n                  >\r\n                     <ListItemText primary={text} />\r\n                  </ListItem>\r\n               );\r\n            })}\r\n         </List>\r\n      </Drawer>\r\n   );\r\n};\r\n\r\nexport default Menu;\r\n","import { Typography } from \"@material-ui/core\";\r\n\r\nconst AboutMe = () => {\r\n   return (\r\n      <div id=\"about\">\r\n         <div id=\"about-text\" className=\"about-item\">\r\n            <Typography paragraph>\r\n               My name's Andrew and I'm currently a senior at the University of\r\n               Rochester.\r\n            </Typography>\r\n            <Typography paragraph>\r\n               Whenever I'm writing about myself, I'm tempted to start with: \"In\r\n               the beginning, I was born.\"\r\n            </Typography>\r\n            <Typography paragraph>\r\n               In the beginning, I was born. It's pretty much all been downhill\r\n               from there.\r\n            </Typography>\r\n            <Typography paragraph>\r\n               In my freetime, I like to bake. I kinda lost the memo about a lot\r\n               of experimentation, so I usually break out the hits of chocolate\r\n               chip cookies and brownies with apple cinnamon muffins and oatmeal\r\n               raisin cookies mixed in. I make the recipes my own by adding too\r\n               much vanilla.\r\n            </Typography>\r\n            <Typography paragraph>\r\n               I also enjoy the Netflix show Lucifer. I look forward to the day\r\n               that season 5B is released (if that day does in fact come).\r\n            </Typography>\r\n            <Typography paragraph>\r\n               My greatest desire (at the time of writing) is to work on a\r\n               project and know someone who uses it so I can say: \"I made that!\"\r\n            </Typography>\r\n         </div>\r\n         <div id=\"self-image-container\" className=\"about-item\">\r\n            <img\r\n               id=\"self-image\"\r\n               src={\r\n                  \"https://dm2301files.storage.live.com/y4mOQ4kpH0t2-F-JV026l7uVQTdh7Z16KvtmTLBkgO1hLCpC8LMCdMVpDpY5UXAjW5bdLf8F92mtYGUWJFMCVkhyIiTcXCaUF4MCMxPpiM4TXT6NBbh7gPxsl2Q057enyzk254urnfKRJVlt368yC0az8zPj1n7zWxmBUn9wGcfKVKINXoldF3G46dBHbjiVyUh?width=720&height=777&cropmode=none\"\r\n               }\r\n               alt=\"me\"\r\n            ></img>\r\n            <label>A picture of myself at a point in time</label>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default AboutMe;\r\n","import {\r\n   CardActions,\r\n   Link,\r\n   Typography,\r\n   CardContent,\r\n   Button,\r\n} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { useState } from \"react\";\r\n\r\nconst Project = (props) => {\r\n   const { name, repository, site, description } = props;\r\n   const [expanded, setExpanded] = useState(false);\r\n\r\n   const toggleExpanded = () => {\r\n      setExpanded(!expanded);\r\n   };\r\n\r\n   return (\r\n      <Card variant=\"outlined\">\r\n         <CardContent>\r\n            <Typography variant=\"h5\">{name}</Typography>\r\n            {repository && (\r\n               <CardActions>\r\n                  <Link href={repository}>Repository</Link>\r\n               </CardActions>\r\n            )}\r\n            {site && (\r\n               <CardActions>\r\n                  <Link href={site}>Website</Link>\r\n               </CardActions>\r\n            )}\r\n            {!expanded ? (\r\n               <CardActions>\r\n                  <Button size=\"small\" onClick={toggleExpanded}>\r\n                     Learn More\r\n                  </Button>\r\n               </CardActions>\r\n            ) : (\r\n               <CardContent>\r\n                  <Typography paragraph>{description}</Typography>\r\n                  <Button size=\"small\" onClick={toggleExpanded}>\r\n                     Minimize\r\n                  </Button>\r\n               </CardContent>\r\n            )}\r\n         </CardContent>\r\n      </Card>\r\n   );\r\n};\r\n\r\nconst Projects = (props) => {\r\n   const { projects } = props;\r\n   return projects.map((project) => {\r\n      return (\r\n         <Project\r\n            key={project.name}\r\n            name={project.name}\r\n            repository={project.repository}\r\n            site={project.site}\r\n            description={project.description}\r\n         />\r\n      );\r\n   });\r\n};\r\n\r\nexport default Projects;\r\n","const future = [\r\n   {\r\n      _id: { $oid: \"60221c553ec6205d21b05e33\" },\r\n      name: \"Whiteboard\",\r\n      description:\r\n         'A collaborative application that allows users to share a virtual whiteboard. Compared to the one supported by Zoom, I would like to add functionality to save images of the whiteboard and create additional whiteboards. Using <a href=\"https://github.com/ajarvis3/canvas\">this canvas app as a precursor to the full project</a>',\r\n   },\r\n   {\r\n      name: \"Scheduling\",\r\n      description:\r\n         \"Current scheduling tools (that I've used) are good at showing a person's availability, but not great at actually scheduling. I'd like to create an app that does this better. The simple case is when all members need to find a common meeting time: just find a meeting time. A more difficult problem would be assigning users to different times (as I had to do when scheduling recitations...) There are other use cases I'd like to consider, so this is a mental concept that I'll give myself more time to implement.\",\r\n   },\r\n];\r\n\r\nexport default future;\r\n","const projects = [\r\n   {\r\n      name: \"React-Chat\",\r\n      repository: \"github.com/ajarvis/react-chat\",\r\n      site: \"ajarvis3.github.io/react-chat\",\r\n      description:\r\n         \"A simple chat application implemented using SignalR and React. The backend is hosted on Azure, this isn't as reliable as I'd like and expect, but it seems that it only takes ~30 seconds to start the application if it has stopped running.\",\r\n   },\r\n   {\r\n      name: \"Senate Scraper\",\r\n      repository: \"github.com/ajarvis/congress\",\r\n      site: \"ajarvis3.github.io/congress\",\r\n      description:\r\n         \"An application to integrate some different concepts. I created a web scraper (that I could not get to run on Heroku :( ) to get information on Senators from senate.gov and stored that in a MongoDB database. The information can then be retrieved by a website using a Spring Boot API that is hosted on Heroku (though it currently takes a bit of time to retrieve).\",\r\n   },\r\n];\r\n\r\nexport default projects;\r\n","import menuState from \"../recoil-state/MenuState\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport Projects from \"./Projects\";\r\nimport { projects, future } from \"../data\";\r\n\r\nconst Content = (props) => {\r\n   const { className } = props;\r\n   const contentState = useRecoilValue(menuState);\r\n   const component =\r\n      contentState === 0 ? (\r\n         <AboutMe />\r\n      ) : contentState === 1 ? (\r\n         <Projects projects={projects} />\r\n      ) : (\r\n         <Projects projects={future} />\r\n      );\r\n\r\n   return <main className={className}>{component}</main>;\r\n};\r\n\r\nexport default Content;\r\n","import \"./App.css\";\nimport { RecoilRoot } from \"recoil\";\nimport Menu from \"./menu/Menu\";\nimport Content from \"./content/Content\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst drawerWidth = 160;\n\nconst useStyles = makeStyles({\n   drawer: {\n      width: drawerWidth,\n   },\n   content: {\n      marginTop: 20,\n      marginLeft: drawerWidth,\n   },\n});\n\nfunction App() {\n   const classes = useStyles();\n   return (\n      <RecoilRoot>\n         <Menu className={classes.drawer} />\n         <Content className={classes.content} />\n      </RecoilRoot>\n   );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}